% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tile_functions.R
\name{prepare_tile}
\alias{prepare_tile}
\title{Import and prepare a LAS tile for further processing}
\usage{
prepare_tile(path, normalize.heights = "tin", treat.as.ground = 9,
  drop.negative = TRUE, fields = NULL, classes = NULL,
  min.points = 1000, flight.gap = 60, unzip.dir = NULL)
}
\arguments{
\item{path}{Path to the LAS or LAZ format file to process. If the file
extension is '.zip' it is assumed to be a compressed LAS file that will be
unzipped before processing (see the \code{unzip.dir} parameter below). A
compressed file should contain only one LAS file (identified by having a
'las' or 'LAS' file extension) although it can also contain other files
(e.g. HTML or XML documents).}

\item{normalize.heights}{Whether, and how, to normalize point heights to
ground level. Can be one of the following:
\describe{
  \item{A logical value}{If \code{TRUE}, relative ground level is estimated from
    an elevation surface fitted by triangulation to ground points in the
    LAS file. This is equivalent to calling the
    \code{\link[lidR]{lasnormalize}} function directly with the argument
    \code{algorithm = tin()}. If \code{FALSE}, point heights will not be
    normalized.}
  \item{An algorithm name as a character string}{Point heights will be
    normalized using the specified algorithm. Must be one of:
    \code{'tin', 'knnidw', 'kriging'} which correspond to the algorithm
    functions provided by the \code{lidR} package.}
  \item{A raster layer}{If a raster layer is provided, the cell values
    will be used as ground elevation to normalize point heights. The layer
    should have the same or greater extent as the LAS file.}
  \item{A raster filename}{Any character string that does not match one of
    the supported algorithm names will be treated as the path to a raster
    file. Supported formats are GeoTIFF ('.tif') and ESRI ASCII ('.asc').
    If the file extension is '.zip' it is assumed to be a compressed
    file that will be unzipped before processing (see the \code{unzip.dir}
    parameter below). A compressed file should contain only one raster file
    (identified by having a '.tif' or '.asc' file extension) although it
    can also contain other files (e.g. HTML or XML documents).}
  \item{NULL}{Same as \code{FALSE}, ie. point heights will not be
    normalized.}
}
\strong{The default value is \code{'tin'}.}
If point heights are normalized, the original values are copied to a new
data table column: 'Zref'.}

\item{treat.as.ground}{If points heights are being normalized by
interpolating ground points (class 2) using one of the lidR package
algorithms (\code{'tin', 'knnidw', 'kriging'}), this argument allows other
point classes to also be treated as ground. The default is class 9 (water).
Set to NULL or an empty vector to only consider class 2 points as ground.}

\item{drop.negative}{If TRUE, any points (other than ground and water points)
whose heights are below ground level (as estimated by Delaunay
interpolation of ground point heights) are adjusted to have a height value
of zero. Ignored if point heights are not being normalized.}

\item{fields}{Either \code{NULL} (default) to include all data fields, or a
character string containing single-letter abbreviations for selected
fields. See \code{\link[lidR]{readLAS}} for details of the available,
single-letter field abbreviations.}

\item{classes}{Point classes to include or exclude. The default
(\code{NULL}) means include all classes other than overlap points
(class 12). Specify a subset of classes as a vector of integers,
e.g. \code{classes = 2:6} would include ground (2), vegetation (3, 4, 5)
and building (6) points. Negative values can be used to exclude selected
classes, e.g. \code{classes = -6} would include all classes except those
classified as building points. Note that overlap points (class 12) are
always excluded unless an explicit \code{classes} vector is provided with
12 as one of its values.}

\item{min.points}{The minimum number of points in a flight line for it to be
retained in the imported tile. The default value (1000) is intended to
exclude flight lines that only appear at the margins of the tile.}

\item{flight.gap}{The minimum time gap (seconds) to use when assigning points
to flight lines.}

\item{unzip.dir}{The directory in which to uncompress a compressed LAS file
(identified by a '.zip' extension). If \code{NULL} (default) a temporary
directory will be used. After processing, the uncompressed file will be
deleted.}
}
\value{
A \code{LAS} object.
}
\description{
This function imports data from a LAS file and prepares it for further
processing. A surface model is first fitted to ground points (class 2) by
Delaunay triangulation and the elevation of all points is then adjusted to be
relative to ground level. Flight lines are identified based on GPS times for
points and, optionally, any flight lines with less than a threshold number
of points are discarded.
}
\note{
This function does not modify the input LAS file. You must write the
  prepared tile to disk explicitly (e.g. using the \code{lidR} package
  function \code{\link[lidR]{writeLAS}}).
}
